import {
  HttpClient,
  createUrlPath,
  getResponseBody,
  getRequestBody,
  RequestOptions,
} from '<%= httpClientPath %>/http-client';

export interface Params {
  path?: Record<any, any>;
  query?: Record<any, any>;
  body?: Record<any, any>;
  options?: RequestOptions;
}

export function <%= functionName %>UrlPath(params?: Params) {
  return createUrlPath('<%= operationPath %>', params);
}

export async function <%= functionName %>(client: HttpClient, params?: Params): Promise<any> {
  const url = <%= functionName %>UrlPath(params);

  const response = await client(url, {
    method: '<%= operationMethod %>',
    body: getRequestBody(params?.body),
    signal: params?.options?.signal,
  });

  return getResponseBody(response);
}
